; ***************************************************************************
; *   Copyright (C) 1979-2015 by Paul Lutus                                 *
; *   http://arachnoid.com/administration                                   *
; *                                                                         *
; *   This program is free software; you can redistribute it and/or modify  *
; *   it under the terms of the GNU General Public License as published by  *
; *   the Free Software Foundation; either version 2 of the License, or     *
; *   (at your option) any later version.                                   *
; *                                                                         *
; *   This program is distributed in the hope that it will be useful,       *
; *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
; *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
; *   GNU General Public License for more details.                          *
; *                                                                         *
; *   You should have received a copy of the GNU General Public License     *
; *   along with this program; if not, write to the                         *
; *   Free Software Foundation, inc.,                                       *
; *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
; ***************************************************************************

; Electric Duet Player Routine circa 1980

; Modified by Alexander Patalenski
; Acorn Electron BeebAsm conversion by Negative Charge


MACRO loadTriplet
    iny                                     ; 2
    lda     (music_addr_low),Y              ; 5 (+1 if page boundary crossed)    
    sta     D4,X                            ; 4
    cmp     #$05                            ; 2
    bcc     skip                           ; 2/3 (+1 if page boundary crossed)
    lsr     a                               ; 2
    lsr     a                               ; 2
.skip    
    lsr     a                               ; 2
    lsr     a                               ; 2
    sta     D6,X                            ; 4
ENDMACRO

.play_ed
    lda     #$00                            ; 2
    sta     D8                              ; 3
    sta     D6                              ; 3
    sta     D7                              ; 3
.triplet_loop    
    ldy     #$00                            ; 2
    lda     (music_addr_low),Y              ; 5 (+1 if page boundary crossed)
    bne     continue                           ; 2/3 (+1 if page boundary crossed)

.exit_player 
    rts                                     ; 6

.continue         
    sta     D2                              ; 3
    ;-------------------------------------------------------------------- 
    ;lda $C000                              ; 4           ; KEYBOARD DATA    
    ;bmi exit_player                              ; 2/3
    ;--------------------------------------------------------------------

    ldx     #$00                            ; 2
    loadTriplet
    
    ldx     #$01                            ; 2
    loadTriplet
    
    lda     #$00                            ; 2    
    ldx     #$8A                            ; 2
    ldy     #$40                            ; 2
    sta     D3                              ; 3
.l2840   
    sta     D8                              ; 3
    dey                                     ; 2
    bne     l2853                           ; 2/3 (+1 if page boundary crossed)
    ldy     D4                              ; 3
    bit     D8                              ; 3
    bmi     l2864                           ; 2/3 (+1 if page boundary crossed)
    ;--------------------------------------------------------------------
    ;bit $C030                              ; 4     - LEN: 3, TIM 4
    toggleSpeaker                           ; 12
    ;--------------------------------------------------------------------
.l284F        
    eor     #$A0                            ; 2
    jmp     l2868                           ; 3
.l2853  
    cpy     D6                              ; 3
    bne     l2863                           ; 2/3 (+1 if page boundary crossed)
    bit     D8                              ; 3
    bpl     l2865                           ; 2/3 (+1 if page boundary crossed)
    ;--------------------------------------------------------------------
    ;bit    $C030                           ; 4     - LEN: 3, TIM 4
    toggleSpeaker                           ; 12
    ;--------------------------------------------------------------------    
.l285F    
    eor     #$A0                            ; 2
    jmp     l2869                           ; 3
.l2863
    nop                                     ; 2
.l2864        
    nop                                     ; 2
.l2865        
    nop                                     ; 2
    nop                                     ; 2
    nop                                     ; 2
.l2868       
    nop                                     ; 2
.l2869     
    nop                                     ; 2
    sta     D8                              ; 3
    dex                                     ; 2
    bne     l287D                           ; 2/3 (+1 if page boundary crossed)
    ldx     D5                              ; 3
    bit     D8                              ; 3
    bmi     l288E                           ; 2/3 (+1 if page boundary crossed)
    ;--------------------------------------------------------------------
    ;bit    $C030                           ; 4     - LEN: 3, TIM 4
    toggleSpeaker                           ; 12
    ;--------------------------------------------------------------------
.l2879     
    eor     #$A0                            ; 2
    jmp     l2892                           ; 3
.l287D  
    cpx     D7                              ; 3
    bne     l288D                           ; 2/3 (+1 if page boundary crossed)
    bit     D8                              ; 3
    bpl     l288F                           ; 2/3 (+1 if page boundary crossed)
    ;--------------------------------------------------------------------
    ;bit    $C030                           ; 4     - LEN: 3, TIM 4    
    toggleSpeaker                           ; 12
    ;--------------------------------------------------------------------
.l2889   
    eor     #$A0                            ; 2      
    jmp     l2893                           ; 3
.l288D 
    nop                                     ; 2
.l288E    
    nop                                     ; 2
.l288F      
    nop                                     ; 2
    nop                                     ; 2
    nop                                     ; 2
.l2892         
    nop                                     ; 2
.l2893    
    nop                                     ; 2
    dec     D3                              ; 5
    bne     l289F                           ; 2/3 (+1 if page boundary crossed)
    dec     D2                              ; 5
    beq     l28A5                           ; 2/3 (+1 if page boundary crossed)
    jmp     l2840                           ; 3
.l289F
    nop                                     ; 2
    nop                                     ; 2
    nop                                     ; 2
    jmp     l2840                           ; 3
.l28A5   
    lda     music_addr_low                  ; 3     
    clc                                     ; 2
    adc     #$03                            ; 2
    sta     music_addr_low                  ; 3     
    bcc     l28B0                           ; 2/3 (+1 if page boundary crossed)
    inc     music_addr_high                 ; 5 
.l28B0
    jmp     triplet_loop                           ; 3